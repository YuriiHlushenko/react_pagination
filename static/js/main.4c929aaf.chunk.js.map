{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","numPages","Math","ceil","pages","map","className","href","onClick","num","items","App","useState","setPerPage","setCurrentPage","length","end","start","visibleItems","slice","id","onChange","event","target","value","selected","htmlFor","string","indexOf","ReactDOM","render","document","getElementById"],"mappings":"mKAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAQd,EAAW,EAAGW,GAAUI,KAAI,SAAAX,GAAC,OAAIA,KAE/C,OACE,qBAAIY,UAAU,aAAd,UACE,oBAAIA,UAA2B,IAAhBP,EACX,qBACA,YAFJ,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QAAS,WACP,OAAwB,IAAhBT,EACJ,KACAC,EAAaD,EAAc,IARnC,oBAcDK,EAAMC,KAAI,SAAAI,GAAG,OACZ,oBAEEH,UAAWP,IAAgBU,EACvB,mBACA,YAJN,SAME,mBACE,UAAQ,WACRH,UAAU,YACVC,KAAI,WAAME,GACVD,QAAS,kBAAMR,EAAaS,IAJ9B,SAMGA,KAXEA,MAeT,oBAAIH,UAAWP,IAAgBE,EAC3B,qBACA,YAFJ,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAAeR,IAAgBE,EAC/BO,QAAS,WACP,OAAQT,IAAgBE,EACpB,KACAD,EAAaD,EAAc,IARnC,wBCtDFW,EAAepB,EAAW,EAAG,IAChCe,KAAI,SAAAX,GAAC,qBAAYA,MAKPiB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBe,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOb,EAAP,KAAoBe,EAApB,KACMjB,EAAQa,EAAMK,OAChBC,EAAMjB,EAAcD,EAClBmB,EAAQD,EAAMlB,EAEhBkB,EAAM,EAAInB,IACZmB,EAAMnB,GAGR,IAAMqB,EAAeR,EAAMS,MAAMF,EAAOD,GAMxC,OACE,sBAAKV,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiCkB,EAAQ,EADzC,cACgDD,EADhD,eAC0DnB,EAD1D,OAIA,sBAAKS,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRc,GAAG,kBACHd,UAAU,eACVe,SAAU,SAAAC,GACRT,GAAYS,EAAMC,OAAOC,OACzBV,EAAe,IANnB,UASE,wBAAQU,MAAM,IAAd,eACA,wBAAQC,UAAQ,EAACD,MAAM,IAAvB,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAvCW,SAACwB,GAChBV,EAAeU,MAwCb,6BACGN,EAAab,KAAI,SAAAsB,GAAM,OACtB,oBAAI,UAAQ,OAAZ,SAAuDA,GAA/BT,EAAaU,QAAQD,aCjEvDE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.4c929aaf.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, numPages).map(n => n);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={currentPage === 1\n        ? 'page-item disabled'\n        : 'page-item'}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            return (currentPage === 1\n              ? null\n              : onPageChange(currentPage - 1));\n          }}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(num => (\n        <li\n          key={num}\n          className={currentPage === num\n            ? 'page-item active'\n            : 'page-item'}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${num}`}\n            onClick={() => onPageChange(num)}\n          >\n            {num}\n          </a>\n        </li>\n      ))}\n      <li className={currentPage === numPages\n        ? 'page-item disabled'\n        : 'page-item'}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === numPages}\n          onClick={() => {\n            return (currentPage === numPages\n              ? null\n              : onPageChange(currentPage + 1));\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items: Items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\n// type PerPage = 3 | 5 | 10 | 20;\ntype Items = string[];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const total = items.length;\n  let end = currentPage * perPage;\n  const start = end - perPage;\n\n  if (end - 1 > total) {\n    end = total;\n  }\n\n  const visibleItems = items.slice(start, end);\n\n  const savePage = (value: number) => {\n    setCurrentPage(value);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start + 1} - ${end} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={event => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option selected value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={savePage}\n      />\n      <ul>\n        {visibleItems.map(string => (\n          <li data-cy=\"item\" key={visibleItems.indexOf(string)}>{string}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}